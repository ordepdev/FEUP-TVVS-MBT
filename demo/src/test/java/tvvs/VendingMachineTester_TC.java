//Test code generated by MISTA

package tvvs;

import tvvs.Coin;
import tvvs.VendingMachine;
import junit.framework.*;

public class VendingMachineTester_TC extends TestCase{

	private VendingMachine vendingmachine;
	
	protected void setUp()  throws Exception {
		vendingmachine = new VendingMachine();
		vendingmachine.setDrink(COFFEE, 35, 1);
		vendingmachine.setDrink(JUICE, 110, 1);
		vendingmachine.setDrink(SODA, 105, 1);
	}
	
	public void test1() throws Exception {
		System.out.println("Test case 1");
		vendingmachine.insertCoin(Coin.DIME);
		assertTrue("1_1", vendingmachine.getDeposit()==10);
		assertTrue("1_1", checkDrink(COFFEE, 35, 1));
		assertTrue("1_1", checkDrink(JUICE, 110, 1));
		assertTrue("1_1", checkDrink(SODA, 105, 1));
		vendingmachine.insertCoin(Coin.DOLLAR);
		assertTrue("1_1_1", vendingmachine.getDeposit()==110);
		assertTrue("1_1_1", checkDrink(COFFEE, 35, 1));
		assertTrue("1_1_1", checkDrink(JUICE, 110, 1));
		assertTrue("1_1_1", checkDrink(SODA, 105, 1));
		vendingmachine.purchase(SODA);
		assertTrue("1_1_1_1", vendingmachine.getDeposit()==0);
		assertTrue("1_1_1_1", checkDrink(COFFEE, 35, 1));
		assertTrue("1_1_1_1", checkDrink(JUICE, 110, 1));
		assertTrue("1_1_1_1", checkDrink(SODA, 105, 0));
		assertTrue("", vendingmachine.getChange()==110-105);
	}

	public void test2() throws Exception {
		System.out.println("Test case 2");
		vendingmachine.insertCoin(Coin.DIME);
		vendingmachine.insertCoin(Coin.DOLLAR);
		vendingmachine.purchase(JUICE);
		assertTrue("1_1_1_2", vendingmachine.getDeposit()==0);
		assertTrue("1_1_1_2", checkDrink(COFFEE, 35, 1));
		assertTrue("1_1_1_2", checkDrink(JUICE, 110, 0));
		assertTrue("1_1_1_2", checkDrink(SODA, 105, 1));
		assertTrue("", vendingmachine.getChange()==110-110);
	}

	public void test3() throws Exception {
		System.out.println("Test case 3");
		vendingmachine.insertCoin(Coin.DIME);
		vendingmachine.returnCoins();
		assertTrue("1_1_2", vendingmachine.getDeposit()==0);
		assertTrue("1_1_2", checkDrink(COFFEE, 35, 1));
		assertTrue("1_1_2", checkDrink(JUICE, 110, 1));
		assertTrue("1_1_2", checkDrink(SODA, 105, 1));
	}

	public void test4() throws Exception {
		System.out.println("Test case 4");
		vendingmachine.insertCoin(Coin.DOLLAR);
		assertTrue("1_2", vendingmachine.getDeposit()==100);
		assertTrue("1_2", checkDrink(COFFEE, 35, 1));
		assertTrue("1_2", checkDrink(JUICE, 110, 1));
		assertTrue("1_2", checkDrink(SODA, 105, 1));
		vendingmachine.purchase(COFFEE);
		assertTrue("1_2_1", vendingmachine.getDeposit()==0);
		assertTrue("1_2_1", checkDrink(COFFEE, 35, 0));
		assertTrue("1_2_1", checkDrink(JUICE, 110, 1));
		assertTrue("1_2_1", checkDrink(SODA, 105, 1));
		assertTrue("", vendingmachine.getChange()==100-35);
	}


	  public static final String COFFEE = VendingMachine.COFFEE; 
	  public static final String JUICE = VendingMachine.JUICE; 
	  public static final String SODA = VendingMachine.SODA; 
		
	  private boolean checkDrink(String drink, int price, int count) {
	    if (drink.equalsIgnoreCase(COFFEE)) {
	      return vendingmachine.getCoffee().getPrice()==price && vendingmachine.getCoffee().getCount()==count;
	    }
	    
	    if (drink.equalsIgnoreCase(JUICE)) {
	      return vendingmachine.getJuice().getPrice()==price && vendingmachine.getJuice().getCount()==count;
	    }
	    
	    if (drink.equalsIgnoreCase(SODA)) {
	      return vendingmachine.getSoda().getPrice()==price && vendingmachine.getSoda().getCount()==count;
	    }
	    
	    return true;
	  }
	
	
	
}
